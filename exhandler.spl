breakpoint;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
backup;
multipush(BP,EIP);
R1=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
if(EC!=0 || R1==10*512-1)then
	R1=3;
	R2=[SYSTEM_STATUS_TABLE+1];
	if(EC==1)then
		R3="Illegal Instrn";
	else if(EC==2)then
		R3="Illegal Mem Access";
	else if(EC==3)then
		R3="Arithmetic Exceptn";
	else R3="Stack Overflow";
	endif;
	endif;
	endif;
	multipush(R2);
	call MOD_4;
	multipop(R2);
	R1=3;
	call MOD_1;
	call MOD_5;
endif;
R3=EPN;
if(R3>3 && R3<8)then
	multipush(R3);
	R1=5;
	R2=[DISK_MAP_TABLE+([SYSTEM_STATUS_TABLE+1]*10)+R3];
	R3=[SYSTEM_STATUS_TABLE+1];
	call MOD_2;
	multipop(R3);
	[PTBR+R3*2]=R0;
	[PTBR+R3*2+1]="1100";
else
	if(R3==2 || R3==3)then
		multipush(R3);
		R1=1;
		call MOD_2;
		multipop(R3);
		[PTBR+R3*2]=R0;
		[PTBR+R3*2+1]="1110";
		R3=R3+1;
		multipush(R3);
		R1=1;
		call MOD_2;
		multipop(R3);
		[PTBR+R3*2]=R0;
		[PTBR+R3*2+1]="1110";
	endif;
endif;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
multipop(BP,EIP);
restore;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]+1;
[([PTBR+2*(SP/512)]*512)+(SP%512)]=EIP;
breakpoint;
ireturn;
